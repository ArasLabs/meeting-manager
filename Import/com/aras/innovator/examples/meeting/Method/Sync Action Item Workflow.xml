<AML>
 <Item type="Method" id="CC968C353B5A4ACA976B85518701E451" action="add">
  <execution_allowed_to keyed_name="World" type="Identity">A73B655731924CD0B027E4F4D5FCC0A9</execution_allowed_to>
  <method_code><![CDATA[Innovator inn = this.getInnovator();
string thisId = this.getID();
Item actionItems = this.getItemsByXPath("Relationships/Item/related_id/Item[@type='Action Item']");

if (actionItems.getItemCount() > 0)
{
    Item itemType = inn.getItemByKeyedName("ItemType", this.getAttribute("type"));
    // Get the Workflow Map to use as a template
    Item wfl = this.newItem("Workflow Map", "get");
    wfl.setAttribute("levels", "3");
    wfl.setProperty("name", "Action Item");
    wfl = wfl.apply();
    if (wfl.isError()) return wfl;

  string wfMapID=wfl.getID();
    // Change the workflow map into a workflow process
    Item wflItems = wfl.getItemsByXPath("//Item[contains(@type,'Workflow') or contains(@type,'Activity')]");
    for (int i = 0; i < wflItems.getItemCount(); i++)
    {
        Item thisWflItem = wflItems.getItemByIndex(i);
        thisWflItem.setAction("add");
        thisWflItem.setProperty("locked_by_id", "");
        thisWflItem.setType(thisWflItem.getAttribute("type").Replace("Map", "Process").Replace(" Template", ""));
        // Replace ids
        string oldId = thisWflItem.getID();
        string newId = inn.getNewID();
        XmlNodeList idNodes = wfl.node.SelectNodes("//*[.='" + oldId + "']|//@*[.='" + oldId + "']");
        foreach (XmlNode idNode in idNodes)
        {
            idNode.InnerText = newId;
        }
    }
    wfl.setProperty("description", "Action Item");

    // Find the Action Item activity and remove
    Item actRel = wfl.getItemsByXPath("Relationships/Item[related_id/Item[@type='Activity'][is_start='1']]");
    for (int i = 0; i < actRel.getItemCount(); i++)
    {
        wfl.removeRelationship(actRel.getItemByIndex(i));
    }
    actRel = actRel.getItemByIndex(0);

    // Check if the workflow already exists
    Item wflRel = this.newItem("Workflow", "get");
    wflRel.setProperty("source_id", thisId);
    Item wflProc = wflRel.createRelatedItem("Workflow Process", "get");
    wflProc.setProperty("description", "Action Item");
    Item act = wflProc.createRelationship("Workflow Process Activity", "get");
    string holdActId = "";
    if (this.getAction() != "add")
    {
        wflRel = wflRel.apply();
    }
    if (wflRel.getItemCount() < 0)
    {
        return wflRel;
    }
    if (this.getAction() != "add" && wflRel.getItemCount() > 0)
    {
        // Workflow exists, edit it
        holdActId = wflRel.getItemsByXPath("related_id/Item/Relationships/Item/related_id/Item[@type='Activity'][name='Hold']").getItemByIndex(0).getID();
        string wflRelId = wflRel.getID();
        string wflProcId = wflRel.getProperty("related_id");
        wflRel = this.newItem("Workflow", "edit");
        wflRel.setID(wflRelId);
        wflProc = wflRel.createRelatedItem("Workflow Process", "edit");
        wflProc.setID(wflProcId);
    }
    else
    {
        // Workflow does not exist, add it
        wflRel = this.newItem("Workflow", "add");
        wflRel.setProperty("source_id", this.getID());
        wflRel.setProperty("source_type", itemType.getID());
    //set copied_from_string for Workflow process to ID of workflow map
    wfl.setProperty("copied_from_string",wfMapID);
        wflRel.setRelatedItem(wfl);
    }
    // Add the Workflow relationship to the parent item
    this.addRelationship(wflRel);
    // Sync the Activities with the Action Items
    for (int i = 0; i < actionItems.getItemCount(); i++)
    {    	
        Item thisActionItem = actionItems.getItemByIndex(i);
        thisActionItem.setProperty("managed_by_id", this.getProperty("owned_by_id", ""));
        Item newActRel = this.newItem();
        switch (thisActionItem.getAction())
        {
            case "add":
                // Adding an Activity, copy the Activity Template and replace the ids
                newActRel.loadAML(actRel.node.OuterXml);
                Item allItems = newActRel.getItemsByXPath("//Item[contains(@type,'Workflow') or contains(@type,'Activity')]");
                for (int j = 0; j < allItems.getItemCount(); j++)
                {
                    Item thisWflItem = allItems.getItemByIndex(j);
                    string oldId = thisWflItem.getID();
                    string newId = inn.getNewID();
                    XmlNodeList idNodes = newActRel.node.SelectNodes("//*[.='" + oldId + "']|//@*[.='" + oldId + "']");
                    foreach (XmlNode idNode in idNodes) { idNode.InnerText = newId; }
                }
                string actName = thisActionItem.getProperty("description", "");
                if (actName.Length > 32) actName = actName.Substring(0, 29) + "...";
                newActRel.getRelatedItem().setProperty("name", actName);
                //newActRel.getRelatedItem().setProperty("label", "ActionItem");
                newActRel.getRelatedItem().setProperty("is_start", "0");
                newActRel.getRelatedItem().setProperty("message", thisActionItem.getProperty("notes", ""));
                thisActionItem.setProperty("activity", newActRel.getRelatedItem().getID());
                if (holdActId.Length == 32) newActRel.getItemsByXPath("related_id/Item/Relationships/Item[@type='Workflow Process Path']").getItemByIndex(0).setProperty("related_id", holdActId);
                Item assignItem = this.newItem("Activity Assignment", "add");
                assignItem.setProperty("related_id", thisActionItem.getProperty("assignee", thisActionItem.getProperty("owned_by_id")));
                assignItem.setProperty("voting_weight", "101");
                newActRel.getRelatedItem().addRelationship(assignItem);
                break;
            case "update":
                // Updating an existing Activity
                string actId = thisActionItem.getProperty("activity", "null");
                newActRel = this.newItem("Workflow Process Activity", "edit");
                newActRel.setAttribute("where", "[WORKFLOW_PROCESS_ACTIVITY].related_id='" + actId + "'");
				
				//Find out the current activity assignment
				Item currentActDetails = this.newItem("Activity", "get");
				currentActDetails.setAttribute("select", "id,name");
                currentActDetails.setID(actId);
				Item currentassignItem = this.newItem("Activity Assignment", "get");
				currentassignItem.setAttribute("select", "id,related_id");
				currentActDetails.addRelationship(currentassignItem);
				currentActDetails = currentActDetails.apply();
				string currentAssignee = currentActDetails.getItemsByXPath("Relationships/Item/related_id/Item").getItemByIndex(0).getID();
									            			
                Item newAct = this.newItem("Activity", "edit");
                newAct.setID(actId);
                newAct.setProperty("name", thisActionItem.getProperty("description", ""));
                newAct.setProperty("message", thisActionItem.getProperty("notes", ""));
                newActRel.setRelatedItem(newAct);
				
				//If the current activity assignement matches the Action Item assignee, dont update
				if (currentAssignee != thisActionItem.getProperty("assignee"))
				{
					//Check if the assignee is saved or ID or user name
                    //Ensure ID is used to set values
					string newAssignee;
					Item identItem = inn.getItemByKeyedName("Identity", thisActionItem.getProperty("assignee"));
                    if (identItem == null)
                    {
                        newAssignee = thisActionItem.getProperty("assignee");
                    }
                    else
                    {
                        newAssignee = identItem.getID();
                    }	            
					assignItem = this.newItem("Activity Assignment", "edit");
					assignItem.setAttribute("where", "[ACTIVITY_ASSIGNMENT].voting_weight='101'");
					assignItem.setProperty("related_id", newAssignee);					
					newActRel.getRelatedItem().addRelationship(assignItem);
				}
                break;
        }
        wflProc = this.getItemsByXPath("Relationships/Item/related_id/Item[@type='Workflow Process']").getItemByIndex(0);
        wflProc.addRelationship(newActRel);
    }
    
    if (wflProc.getAction() == "add")
    {
		
		Item setStart = wflProc.getItemsByXPath("Relationships/Item[related_id/Item[@type='Activity'][priority='2']]").getItemByIndex(0).getRelatedItem();
		setStart.setProperty("is_start", "1");
	}
}
return this;]]></method_code>
  <method_type>C#</method_type>
  <name>Sync Action Item Workflow</name>
 </Item>
</AML>